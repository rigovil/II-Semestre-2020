PiPorSeries: el programa lo que hace es crear 10 procesos (en realidad se crean más), pero solamente esos 10 son los encargados de calcular una parte para encontrar el resultado de la aproximación de pi, cada uno de estos procesos tiene un identificador (de 0 a 9) que utilizan para calcular su parte y la guardan en un array de acuerdo con ese id. Al final, el proceso padre suma todos los valores dentro de ese array y debería de dar un valor de aproximación a pi, el problema es que al utilizar fork, los procesos copian el espacio de memoria del proceso padre pero son espacios independientes, por lo que todos los procesos guardan su resultado parcial en un array que no es el mismo que el del proceso padre, dando así un valor de 0, que es el valor con el que se inicializa ese array en el proceso padre.

SumaUno: el programa de forma serial suma uno 1000 veces por cada proceso según la cantidad que haya sido indicada, el número de procesos solo es para establecer un límite pues todo se ejecuta de manera serial. Pero también hace el mismo cálculo de manera paralela, creando efectivamente un proceso por cada uno que haya sido indicado, y ese proceso va a sumarle uno 1000 veces a una variable que ha sido enviada como puntero, sin embargo persiste el mismo problema que el programa anterior pues el puntero no corresponde a la dirección de la variable original del proceso padre, entonces el valor solo se suma en la dirección de la copia de esa variable en el espacio de memoria de ese proceso.
